name: CI

on:
  push:
    branches:
      - master
      - staging
      - trying
  pull_request:
    branches:
      - master

jobs:
  Test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        rust: [stable, beta]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: build
      - uses: actions-rs/cargo@v1
        with:
          command: test

  Lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - uses: actions-rs/cargo@v1
        if: always()
        with:
          command: clippy
          args: --workspace --all-targets -- -D warnings

  # We need some "accummulation" job here because bors fails (timeouts) to
  # listen on matrix builds. Hence, we have some kind of dummy here that bors
  # can listen on
  Success:
    name: Success
    needs:
      - Test
      - Lint
    runs-on: ubuntu-latest
    steps:
      - name: Success
        run: exit 0
